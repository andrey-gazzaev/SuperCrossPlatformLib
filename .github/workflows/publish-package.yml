name: dotnet package

on: [push]

jobs:
  build:


    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Install dependencies
        run: dotnet workload install wasm-tools

      - name: Create the JS lib package
        run: dotnet publish SuperCrossPlatformLib -c Release

      - name: Make the package
        shell: pwsh
        run: |
          .\make-package.ps1

      - name: Push generated lib to JS repository
        env:
            API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
            DESTINATION_BRANCH: 'main'
            COMMIT_EMAIL: 'andrey.gazzaev@gmail.com'
            COMMIT_USERNAME: 'andrey-gazzaev'
            DESTINATION_USERNAME: 'andrey-gazzaev'
            DESTINATION_REPOSITORY: 'SuperCrossPlatformLibAutoGen'
            SOURCE_FILES: 'SuperCrossPlatformLib/bin/Release/net9.0/browser-wasm/AppBundle/'
            CLONE_DIRECTORY: 'SuperCrossPlatformLibAutoGen'
            DESTINATION_DIRECTORY: '/'
        script: |

          # Setup git
          git config --global user.email "$COMMIT_EMAIL"
          git config --global user.name "$COMMIT_USERNAME"

          # Remove git directory if it exists to prevent errors
          rm -rf .git

          # If source files are not from workflow container, clone from source git repository
          if [ "true" -ne "$FROM_CONTAINER" ]
          then
            echo
            echo "##### Cloning source git repository - https://github.com/$GITHUB_REPOSITORY.git #####"

            git clone "https://github.com/$GITHUB_REPOSITORY.git" repo
            cd repo
          fi

          echo
          echo "##### Cloning destination git repository - https://$API_TOKEN_GITHUB@github.com/$DESTINATION_USERNAME/$DESTINATION_REPOSITORY.git #####"

          git clone --single-branch --branch "$DESTINATION_BRANCH" "https://$API_TOKEN_GITHUB@github.com/$DESTINATION_USERNAME/$DESTINATION_REPOSITORY.git" "$CLONE_DIRECTORY"
          ls -la "$CLONE_DIRECTORY"

          echo
          echo "##### Copying contents to git repo #####"

          mkdir -p "$CLONE_DIRECTORY/$DESTINATION_DIRECTORY"
          cp -rvf $SOURCE_FILES "$CLONE_DIRECTORY/$DESTINATION_DIRECTORY"
          cd "$CLONE_DIRECTORY"

          echo
          echo "##### Adding git commit #####"

          ORIGIN_COMMIT="https://github.com/$GITHUB_REPOSITORY/commit/$GITHUB_SHA"
          COMMIT_MESSAGE="${COMMIT_MESSAGE/ORIGIN_COMMIT/$ORIGIN_COMMIT}"

          git add .
          git status

          # don't commit if no changes were made
          git diff-index --quiet HEAD || git commit --message "$COMMIT_MESSAGE"

          echo
          echo "##### Pushing git commit #####"
          # --set-upstream: sets the branch when pushing to a branch that does not exist
          git push origin --set-upstream "$DESTINATION_BRANCH"